load("@bzlws//:index.bzl", "bzlws_copy", "bzlws_link")

bzlws_copy(
    name = "copy_example_txt",
    srcs = ["example.txt"],
    out = "example/ignored_folder/{FILENAME}",
)

bzlws_copy(
    name = "copy_example_txt_file_path",
    srcs = ["example.txt"],
    out = "example/ignored_folder/{FILEPATH}",
    force = True,
)

bzlws_copy(
    name = "copy_example_txt_file_path_external",
    srcs = ["@faux_repo//:example.txt"],
    out = "example/ignored_folder/{FILEPATH}",
    force = True,
)

bzlws_link(
    name = "link_example_txt",
    srcs = ["example.txt"],
    out = "example/ignored_folder/{FILENAME}",
)

bzlws_copy(
    name = "copy_error_example_txt",
    srcs = ["example.txt"],
    out = "example/folder/{FILENAME}",
)

bzlws_copy(
    name = "link_error_example_txt",
    srcs = ["example.txt"],
    out = "example/folder/{FILENAME}",
)

bzlws_copy(
    name = "path_substitutions_example1",
    srcs = ["example.txt"],
    out = "example/ignored_folder/__{BASENAME}__{EXT}",
)

bzlws_copy(
    name = "path_substitutions_example2",
    srcs = ["example.txt"],
    out = "example/ignored_folder/{EXTNAME}__{FILENAME}",
)

bzlws_copy(
    name = "substitutions_example1",
    srcs = ["subst_example.txt"],
    out = "example/ignored_folder/{FILENAME}",
    substitutions = {
        "@bzlws//info:execution_root": "__EXEC_ROOT__",
        "@bzlws//info:release": "__BAZEL_RELEASE__",
    },
)

bzlws_copy(
    name = "info_all_example",
    srcs = ["info.txt"],
    out = "example/ignored_folder/{FILENAME}",
    substitutions = {
        "@bzlws//info:bazel-bin": "__bazel-bin",
        "@bzlws//info:bazel-genfiles": "__bazel-genfiles",
        "@bzlws//info:bazel-testlogs": "__bazel-testlogs",
        "@bzlws//info:character-encoding": "__character-encoding",
        "@bzlws//info:command_log": "__command_log",
        "@bzlws//info:committed-heap-size": "__committed-heap-size",
        "@bzlws//info:execution_root": "__execution_root",
        "@bzlws//info:gc-count": "__gc-count",
        "@bzlws//info:gc-time": "__gc-time",
        "@bzlws//info:install_base": "__install_base",
        "@bzlws//info:java-home": "__java-home",
        "@bzlws//info:java-runtime": "__java-runtime",
        "@bzlws//info:java-vm": "__java-vm",
        "@bzlws//info:max-heap-size": "__max-heap-size",
        "@bzlws//info:output_base": "__output_base",
        "@bzlws//info:output_path": "__output_path",
        "@bzlws//info:package_path": "__package_path",
        "@bzlws//info:release": "__release",
        "@bzlws//info:repository_cache": "__repository_cache",
        "@bzlws//info:server_log": "__server_log",
        "@bzlws//info:server_pid": "__server_pid",
        "@bzlws//info:used-heap-size": "__used-heap-size",
        "@bzlws//info:workspace": "__workspace",
    },
)

bzlws_copy(
    name = "stamp_subst_example",
    srcs = ["stamp_info.txt"],
    out = "example/ignored_folder/{FILENAME}",
    stamp_substitutions = {
        "BUILD_HOST": "__BUILD_HOST__",
    },
)

bzlws_copy(
    name = "stamp_out_path",
    srcs = ["example.txt"],
    out = "example/ignored_folder/{BUILD_HOST}/{BUILD_USER}/{FILENAME}",
    force = True,
)
